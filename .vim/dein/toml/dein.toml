[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_char_list = ['|', '¦', '┆', '┊']
'''

[[plugins]]
repo = 'vim-scripts/vim-auto-save'
hook_add = '''
  let g:auto_save = 1
  let g:auto_save_in_insert_mode = 0
  let g:auto_save_insert_mode = 0
  let g:auto_save_silent = 1
'''

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
  map R <Plug>(operator-replace)
'''

[[plugins]]
repo = 'ervandew/supertab'
hook_add = '''
  let g:SuperTabDefaultCompletionType = "<c-n>"
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tomasiser/vim-code-dark'
hook_add = '''
  syntax on
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline/vim-airline-themes', 'tpope/vim-fugitive']
hook_add = '''
  let g:airline_theme = 'codedark'
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#branch#enabled = 1
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#wordcount#enabled = 0
  let g:airline#extensions#hunks#enabled=0
  let g:airline#extensions#default#layout = [['a', 'b', 'c'], ['x', 'y', 'z']]
  let g:airline_section_a = airline#section#create(['mode', 'crypt'])
  let g:airline_section_c = '%t'
  let g:airline_section_x = '%{&filetype}'
  "let g:airline_section_z = '%3l:%2v %{airline#extensions#ale#get_warning()} %{airline#extensions#ale#get_error()}'
  let g:airline#extensions#ale#error_symbol = '🚫'
  let g:airline#extensions#ale#warning_symbol = '👀'
  let g:airline#extensions#default#section_truncate_width = {}
  let g:airline#extensions#whitespace#enabled = 1
'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  nmap n <Plug>(anzu-n-with-echo)
  nmap N <Plug>(anzu-N-with-echo)
  nmap * <Plug>(anzu-star-with-echo)
  nmap # <Plug>(anzu-sharp-with-echo)
  " clear status
  nmap <Esc><Esc> <Plug>(anzu-clear-search-status)
  " statusline
  set statusline=%{anzu#search_status()}
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
  let g:rainbow_active = 1
'''

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
  let g:fern#default_hidden=1
  nnoremap <C-n> :Fern . -reveal=% -drawer -toggle -width=40<CR>
'''

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
hook_add = '''
  let g:fern#renderer = 'nerdfont'
'''

[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'
hook_add = '''
  augroup my-glyph-palette
    autocmd! *
    autocmd FileType fern call glyph_palette#apply()
    autocmd FileType nerdtree,startify call glyph_palette#apply()
  augroup END
'''

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
" Ctrl+pでファイル検索を開く
nnoremap <C-p> :call FzfOmniFiles()<CR>
" Ctrl+gで文字列検索を開く
command! -bang -nargs=* Rg
\ call fzf#vim#grep(
\ 'rg --column --line-number --hidden --ignore-case --no-heading --color=always '.shellescape(<q-args>), 1,
\ <bang>0 ? fzf#vim#with_preview({'options': '--delimiter : --nth 3..'}, 'up:60%')
\ : fzf#vim#with_preview({'options': '--exact --delimiter : --nth 3..'}, 'right:50%:hidden', '?'),
\ <bang>0)
nnoremap <C-g> :Rg<CR>
" frでカーソル位置の単語をファイル検索する
nnoremap fr vawy:Rg <C-R>"<CR>
" frで選択した単語をファイル検索する
xnoremap fr y:Rg <C-R>"<CR>
'''

[[plugins]]
repo = 'junegunn/fzf'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
merged = '0'
